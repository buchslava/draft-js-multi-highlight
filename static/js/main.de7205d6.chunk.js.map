{"version":3,"sources":["App.tsx","text.js","reportWebVitals.ts","index.tsx"],"names":["styles","editor","border","minHeight","margin","App","processedHTML","DraftPasteProcessor","processHTML","contentState","ContentState","createFromBlockArray","useRef","hightlightStyles","yellow","backgroundColor","red","color","blue","initHighlightConfig","rules","content","style","matcher","SentenceMatcher","WordMatcher","useState","highlightConfig","setHighlightConfig","secondParagraph","setSecondParagraph","EditorState","createWithContent","MultiHighlightDecorator","editorState","setEditorState","focusEditor","current","focus","useEffect","getCurrentContent","getBlocksAsArray","forEach","bl","index","getKey","set","decorator","onClick","disabled","length","e","preventDefault","newConfig","ref","blockStyleFn","block","onChange","newState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAYMA,EAAS,CACbC,OAAQ,CACNC,OAAQ,iBACRC,UAAW,MACXC,OAAQ,KA8IGC,MA1If,WACE,IAAMC,EAAgBC,IAAoBC,YCrB3B,q5CDsBTC,EAAeC,eAAaC,qBAAqBL,GACjDL,EAASW,iBAAY,MACrBC,EAAmB,CACvBC,OAAQ,CACNC,gBAAiB,UAEnBC,IAAK,CACHC,MAAO,OAETC,KAAM,CACJD,MAAO,SAGLE,EAA4C,CAChDC,MAAO,CACL,CACEC,QAAS,CAAC,yDACVC,MAAO,SACPC,QAASC,KAEX,CACEH,QAAS,CAAC,OACVC,MAAO,MACPC,QAASE,KAEX,CACEJ,QAAS,CAAC,SAAU,SACpBC,MAAO,OACPC,QAASE,MAGbzB,OAAQa,GAjCG,EAsCiCa,mBAA+BP,GAtChE,mBAsCNQ,EAtCM,KAsCWC,EAtCX,OAuCiCF,qBAvCjC,mBAuCNG,EAvCM,KAuCWC,EAvCX,OAwCyBJ,mBACpCK,cAAYC,kBACVvB,EACAwB,YAAwBN,KA3Cf,mBAwCNO,EAxCM,KAwCOC,EAxCP,KA+Cb,SAASC,IACPnC,EAAOoC,QAAQC,QA4BjB,OAzBAC,qBAAU,WACRL,EACGM,oBACAC,mBACAC,SAAQ,SAACC,EAAkBC,GACZ,IAAVA,GACFd,EAAmBa,EAAGE,eAG3B,CAACX,IAEJK,qBAAU,WACJZ,GACFQ,EACEJ,cAAYe,IAAIZ,EAAa,CAC3Ba,UAAWd,YAAwBN,QAIxC,CAACA,IAEJY,qBAAU,WACRH,MACC,IAGD,sBAAKY,QAASZ,EAAad,MAAOtB,EAAOC,OAAzC,UACE,gCACE,wBACEgD,WAAYtB,EAAgBP,MAAM8B,OAAS,GAC3CF,QAAS,SAACG,GACRA,EAAEC,iBACF,IAAMC,EAAS,eAAQ1B,GACvB0B,EAAUjC,MAAM,GAAGC,QAAU,CAAC,OAC9BO,EAAmByB,IANvB,mCAWA,wBACEL,QAAS,SAACG,GACRA,EAAEC,iBACFxB,EAAmBT,IAHvB,2BAQA,wBACE8B,WAAYtB,EAAgBP,MAAM8B,OAAS,GAC3CF,QAAS,SAACG,GACRA,EAAEC,iBACF,IAAMC,EAAS,eAAQ1B,GACvB0B,EAAUjC,MAAM,GAAGC,QAAU,CAC3B,+DACA,uJACA,yDAEFO,EAAmByB,IAVvB,4CAeA,wBACEJ,WAAYtB,EAAgBP,MAAM8B,OAAS,GAC3CF,QAAS,SAACG,GACRA,EAAEC,iBACFxB,EAAmB,CACjBR,MAAO,GACPpB,OAAQa,KANd,oCAaF,cAAC,SAAD,CACEyC,IAAKrD,EACLsD,aA5Fe,SAACC,GAAD,OACnBA,EAAMX,WAAahB,EAAkB,iBAAmB,oBA4FpDK,YAAaA,EACbuB,SAAU,SAACC,GACTvB,EAAeuB,UEzIVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.de7205d6.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Editor, EditorState, ContentState, ContentBlock } from \"draft-js\";\n// @ts-ignore\nimport DraftPasteProcessor from \"draft-js/lib/DraftPasteProcessor\";\nimport { text } from \"./text\";\nimport {\n  MultiHighlightDecorator,\n  WordMatcher,\n  SentenceMatcher,\n  MultiHighlightConfig,\n} from \"draft-js-multi-inline-highlight\";\n\nconst styles = {\n  editor: {\n    border: \"1px solid gray\",\n    minHeight: \"6em\",\n    margin: 20,\n  },\n};\n\nfunction App() {\n  const processedHTML = DraftPasteProcessor.processHTML(text);\n  const contentState = ContentState.createFromBlockArray(processedHTML);\n  const editor = useRef<any>(null);\n  const hightlightStyles = {\n    yellow: {\n      backgroundColor: \"yellow\",\n    },\n    red: {\n      color: \"red\",\n    },\n    blue: {\n      color: \"blue\",\n    },\n  };\n  const initHighlightConfig: MultiHighlightConfig = {\n    rules: [\n      {\n        content: [\"His back begins to ache, but he knows he can bear it.\"],\n        style: \"yellow\",\n        matcher: SentenceMatcher,\n      },\n      {\n        content: [\"and\"],\n        style: \"red\",\n        matcher: WordMatcher,\n      },\n      {\n        content: [\"pulled\", \"knows\"],\n        style: \"blue\",\n        matcher: WordMatcher,\n      },\n    ],\n    styles: hightlightStyles,\n  };\n\n  const blockStyleFn = (block: ContentBlock) =>\n    block.getKey() === secondParagraph ? \"grey-paragraph\" : \"normal-paragraph\";\n  const [highlightConfig, setHighlightConfig] = useState<MultiHighlightConfig>(initHighlightConfig);\n  const [secondParagraph, setSecondParagraph] = useState<string>();\n  const [editorState, setEditorState] = useState(\n    EditorState.createWithContent(\n      contentState,\n      MultiHighlightDecorator(highlightConfig)\n    )\n  );\n\n  function focusEditor() {\n    editor.current.focus();\n  }\n\n  useEffect(() => {\n    editorState\n      .getCurrentContent()\n      .getBlocksAsArray()\n      .forEach((bl: ContentBlock, index: number) => {\n        if (index === 2) {\n          setSecondParagraph(bl.getKey());\n        }\n      });\n  }, [editorState]);\n\n  useEffect(() => {\n    if (highlightConfig) {\n      setEditorState(\n        EditorState.set(editorState, {\n          decorator: MultiHighlightDecorator(highlightConfig),\n        })\n      );\n    }\n  }, [highlightConfig]);\n\n  useEffect(() => {\n    focusEditor();\n  }, []);\n\n  return (\n    <div onClick={focusEditor} style={styles.editor}>\n      <div>\n        <button\n          disabled={!(highlightConfig.rules.length > 1)}\n          onClick={(e) => {\n            e.preventDefault();\n            const newConfig = { ...highlightConfig };\n            newConfig.rules[1].content = [\"the\"];\n            setHighlightConfig(newConfig);\n          }}\n        >\n          Change \"and\" to \"the\"\n        </button>\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            setHighlightConfig(initHighlightConfig);\n          }}\n        >\n          Initial state\n        </button>\n        <button\n          disabled={!(highlightConfig.rules.length > 1)}\n          onClick={(e) => {\n            e.preventDefault();\n            const newConfig = { ...highlightConfig };\n            newConfig.rules[0].content = [\n              \"At noon that day, a fish takes the bait on one of his lines.\",\n              \"The old man is very cautious, using all his knowledge, gained through decades of experience on the water, to know what to do with the line and when.\",\n              \"His back begins to ache, but he knows he can bear it.\",\n            ];\n            setHighlightConfig(newConfig);\n          }}\n        >\n          Also, select 2 first sentences\n        </button>\n        <button\n          disabled={!(highlightConfig.rules.length > 1)}\n          onClick={(e) => {\n            e.preventDefault();\n            setHighlightConfig({\n              rules: [],\n              styles: hightlightStyles,\n            });\n          }}\n        >\n          Reset hightlighting\n        </button>\n      </div>\n      <Editor\n        ref={editor}\n        blockStyleFn={blockStyleFn}\n        editorState={editorState}\n        onChange={(newState) => {\n          setEditorState(newState);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","export const text = `\n<h1>The Struggle</h1>\n<p>At noon that day, a fish takes the bait on one of his lines. The old man is very cautious, using all his knowledge, gained through decades of experience on the water, to know what to do with the line and when. The line was one hundred fathoms deep and the fish he hooked a marlin. Santiago knows immediately that he’s got a very large fish on his line but he isn’t sure how large. One hint of its size is the fact that the old man can’t get it pulled in. Rather, it starts to pull the boat out to sea. While this might frighten some sailors, the old man is nonplussed. He knows that no matter where he ends up he’ll be able to navigate back to the island. It’s a “long” island he states, and the lights are bright.</p>\n<p>Over the next hours, and eventually days, the old man is pulled by the fish out into the sea. He does not tie the line off for fear that it will snap from the tension. Rather, he wraps it around his shoulders and back. His back begins to ache, but he knows he can bear it. He speaks out loud to himself, a habit that began after Manolin left his skiff. Santiago speaks on life, death and the brotherhood he feels with the fish on his line. Although he knows they are connected, and that the fish is a majestic creature he is determined to kill it. He wants to show the fish what man can do and he desperately needs something to sell.</p>\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}